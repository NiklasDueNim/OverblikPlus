@page "/calendar"
@using OverblikPlus.Dtos.Tasks
@using OverblikPlus.Services.Interfaces
@inject ITaskService TaskService

<div class="container">
    <h3>Kalender</h3>

    <!-- Navigationskontrol -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <button class="btn btn-primary" @onclick="PreviousMonth">Forrige måned</button>
        <h4>@selectedMonth.ToString("MMMM yyyy")</h4>
        <button class="btn btn-primary" @onclick="NextMonth">Næste måned</button>
    </div>

    <!-- Kalendergrid -->
    <div class="calendar-header">
        @foreach (var dayName in dayNames)
        {
        <div>@dayName</div>
        }
    </div>
    <div class="calendar-grid">
        @foreach (var day in daysInMonth)
        {
        <div class="calendar-cell @(day.Date == DateTime.Today ? "today" : "")">
            <div class="date-number">@day.Day</div>
            @if (tasksForMonth.ContainsKey(day.Date))
            {
            <ul class="task-list">
                @foreach (var task in tasksForMonth[day.Date])
                {
                <li class="task-item">@task.Name</li>
                }
            </ul>
            }
        </div>
        }
    </div>
</div>


<!-- Modal til aftaledetaljer -->
@if (showModal)
{
    <div class="modal-backdrop">
        <div class="modal">
            <h4>Aftaler for @selectedDate.ToShortDateString()</h4>
            <ul class="task-list">
                @if (tasksForMonth.ContainsKey(selectedDate))
                {
                    @foreach (var task in tasksForMonth[selectedDate])
                    {
                        <li>@task.Name</li>
                    }
                }
                else
                {
                    <li>Ingen aftaler</li>
                }
            </ul>
            <input type="text" placeholder="Tilføj ny aftale" @bind="newTaskName" class="form-control mb-2" />
            <button class="btn btn-primary" @onclick="AddTask">Tilføj</button>
            <button class="btn btn-secondary" @onclick="CloseModal">Luk</button>
        </div>
    </div>
}

@code {
    private DateTime selectedMonth = DateTime.Today;
    private List<DateTime> daysInMonth = new();
    private Dictionary<DateTime, List<ReadTaskDto>> tasksForMonth = new();
    private string[] dayNames = { "Man", "Tir", "Ons", "Tor", "Fre", "Lør", "Søn" };
    private bool showModal = false;
    private DateTime selectedDate;
    private string newTaskName;

    protected override async Task OnInitializedAsync()
    {
        await LoadTasksForMonth();
    }

    private async Task LoadTasksForMonth()
    {
        var userId = "hent_userId"; // Skift dette ud med det korrekte userId
        daysInMonth = Enumerable.Range(1, DateTime.DaysInMonth(selectedMonth.Year, selectedMonth.Month))
                                .Select(day => new DateTime(selectedMonth.Year, selectedMonth.Month, day))
                                .ToList();

        // Simulér opgaver (erstat med API-kald)
        tasksForMonth = new Dictionary<DateTime, List<ReadTaskDto>>
        {
            { DateTime.Today, new List<ReadTaskDto> { new ReadTaskDto { Name = "Læge kl. 10:40" } } },
            { DateTime.Today.AddDays(1), new List<ReadTaskDto> { new ReadTaskDto { Name = "Møde kl. 14:00" } } }
        };
    }

    private void PreviousMonth()
    {
        selectedMonth = selectedMonth.AddMonths(-1);
        _ = LoadTasksForMonth();
    }

    private void NextMonth()
    {
        selectedMonth = selectedMonth.AddMonths(1);
        _ = LoadTasksForMonth();
    }

    private void OpenDayDetails(DateTime date)
    {
        selectedDate = date;
        newTaskName = string.Empty;
        showModal = true;
    }

    private void AddTask()
    {
        if (!tasksForMonth.ContainsKey(selectedDate))
        {
            tasksForMonth[selectedDate] = new List<ReadTaskDto>();
        }

        tasksForMonth[selectedDate].Add(new ReadTaskDto { Name = newTaskName });
        newTaskName = string.Empty;
    }

    private void CloseModal()
    {
        showModal = false;
    }
}
