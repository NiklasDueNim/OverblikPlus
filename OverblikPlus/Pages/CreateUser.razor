@page "/create-user"
@using OverblikPlus.Services

<h3>Opret Bruger</h3>

<EditForm Model="@newUser" OnValidSubmit="@HandleCreateUser" class="user-form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">Fornavn</label>
        <InputText id="firstName" @bind-Value="newUser.FirstName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="lastName">Efternavn</label>
        <InputText id="lastName" @bind-Value="newUser.LastName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="CPRNumber">CPRNumber</label>
        <InputText id="role" @bind-Value="newUser.CPRNumber" class="form-control" />
    </div>
    <div class="form-group">
        <label for="MedicationDetails">Medicin</label>
        <InputText id="role" @bind-Value="newUser.MedicationDetails" class="form-control" />
    </div>

    <div class="form-group">
        <label for="username">Brugernavn</label>
        <InputText id="username" @bind-Value="newUser.Username" class="form-control" />
    </div>
    

    <div class="form-group">
        <label for="role">Rolle</label>
        <InputText id="role" @bind-Value="newUser.Role" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Opret Bruger</button>
</EditForm>

@code {
    private CreateUserDto newUser = new CreateUserDto();

    [Inject] public IUserService UserService { get; set; }

    private async Task HandleCreateUser()
    {
        try
        {
            Console.WriteLine($"Fors√∏ger at oprette bruger: {newUser.FirstName}, {newUser.LastName}, {newUser.Username}, {newUser.Role}");
            await UserService.CreateUser(newUser);
            Console.WriteLine("Bruger oprettet succesfuldt.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fejl ved oprettelse af bruger: {ex.Message}");
        }
    }

}
