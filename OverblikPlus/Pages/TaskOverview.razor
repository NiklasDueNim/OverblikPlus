@code {
    [Parameter] public List<TaskStepDto> TaskSteps { get; set; } = new();
    [Parameter] public EventCallback OnTaskCompleted { get; set; }
    [Inject] private IJSRuntime JS { get; set; }

    private int currentStepIndex = 0;
    private bool isScanning = false;

    private async Task ShowNextStep()
    {
        if (currentStepIndex < TaskSteps.Count - 1)
        {
            currentStepIndex++;
            if (TaskSteps[currentStepIndex].RequiresQrCodeScan)
            {
                await StartScanning();
            }
        }
        else
        {
            await OnTaskCompleted.InvokeAsync();
        }
    }

    private async Task StartScanning()
    {
        isScanning = true;
        await JS.InvokeVoidAsync("startScanning");
    }

    [JSInvokable]
    public async Task OnQrCodeScanned(string result)
    {
        Console.WriteLine($"QR-kode resultat: {result}");
        isScanning = false;
        await ShowNextStep();
    }

    public async Task StopScanning()
    {
        await JS.InvokeVoidAsync("stopScanning");
    }
}

@if (TaskSteps.Count > 0)
{
    <h3>Trin @TaskSteps[currentStepIndex].StepNumber</h3>
    <div>
        <img src="@TaskSteps[currentStepIndex].Image" alt="Step Image" style="width:150px; height:150px;" />
        <p>@TaskSteps[currentStepIndex].Text</p>
        @if (currentStepIndex < TaskSteps.Count - 1)
        {
            <button @onclick="ShowNextStep">Næste</button>
        }
        else
        {
            <p>Du er færdig med opgaven</p>
        }
    </div>
}