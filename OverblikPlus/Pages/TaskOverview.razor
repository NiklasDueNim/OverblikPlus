@page "/tasks"
@using OverblikPlus.Dtos.Tasks
@using OverblikPlus.Services.Interfaces
@inject ITaskService TaskService
@inject ITaskStepService TaskStepService

@inject NavigationManager Navigation

<div class="container mt-4">
    <h3 class="mb-4">Mine Opgaver</h3>

    <!-- List of Tasks -->
    <ul class="list-group">
        @foreach (var task in Tasks)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <h5>@task.Name</h5>
                    <p class="mb-1">@task.Description</p>
                    @if (!string.IsNullOrEmpty(task.Image))
                    {
                        <img src="@task.Image" alt="Task Image" class="img-thumbnail" style="max-width: 120px; max-height: 120px; object-fit: cover;" />
                    }
                </div>
                <div class="ml-auto">
                    <button class="btn btn-primary" @onclick="() => StartTask(task.Id)">
                        Se opgave trin for trin
                    </button>
                </div>
            </li>
        }
    </ul>
</div>

@code {
    private List<ReadTaskDto> Tasks { get; set; } = new List<ReadTaskDto>();

    protected override async Task OnInitializedAsync()
    {
        await LoadTasks();
    }

    private async Task LoadTasks()
    {
        Tasks = await TaskService.GetAllTasks();
    }
    
    private async Task StartTask(int taskId)
    {
        var steps = await TaskStepService.GetStepsForTask(taskId);
        if (steps.Any())
        {
            var firstStepId = steps.First().Id;
            Navigation.NavigateTo($"/task-step-view/{taskId}/step/{firstStepId}");
        }
        else
        {
            Console.WriteLine($"No steps found for task with ID {taskId}");
        }
    }

}

