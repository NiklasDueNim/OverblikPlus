@inject IJSRuntime JS
@code {
    [Parameter] public EventCallback<string> OnScanCompleted { get; set; }

    private bool isScanning;

    public async Task StartScanning()
    {
        Console.WriteLine("StartScanning called in TaskStepView.");

        if (!isScanning)
        {
            isScanning = true;
            await JS.InvokeVoidAsync("startScanning");
            Console.WriteLine("JavaScript scanning started.");

        }
    }

    public async Task StopScanning()
    {
        Console.WriteLine("StopScanning called in TaskStepView.");
        await JS.InvokeVoidAsync("stopScanning");
        isScanning = false;
        Console.WriteLine("JavaScript scanning stopped.");
    }

    [JSInvokable]
    public async Task OnQrCodeScanned(string result)
    {
        Console.WriteLine("QR code scanned in TaskStepView: " + result);
        await StopScanning();
        await OnScanCompleted.InvokeAsync(result);
    }
}

<div id="qr-scanner" style="display: @(isScanning ? "block" : "none");">
    <video id="video" style="width: 100%; height: auto;"></video>
    <p id="result"></p>
    <button @onclick="StopScanning">Annuller</button>
</div>