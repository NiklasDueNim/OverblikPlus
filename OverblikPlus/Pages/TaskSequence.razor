@page "/task-sequence/{TaskId:int}/{StepNumber:int}"

@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Opgave Sekvens - Trin @StepNumber</h3>

@if (currentStep == null)
{
<p>Indlæser opgavetrin...</p>
}
else
{
<div>
    <img src="@currentStep.ImageUrl" alt="Trin billede" width="300" />
    <p>@currentStep.Text</p>
    <button @onclick="NavigateToNextStep">Næste trin</button>
</div>
}

@code {
[Parameter]
public int TaskId { get; set; }

[Parameter]
public int StepNumber { get; set; }

private TaskStep? currentStep;

protected override async Task OnParametersSetAsync()
{
    try
    {
        // Hent aktuelt trin baseret på TaskId og StepNumber
        currentStep = await Http.GetFromJsonAsync<TaskStep>($"http://localhost:5032/api/TaskStep/{TaskId}/step/{StepNumber}");
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Fejl ved hentning af data: {ex.Message}");
    }
}


private void NavigateToNextStep()
{
StepNumber++;
NavigationManager.NavigateTo($"/task-sequence/{TaskId}/{StepNumber}");
}

public class TaskStep
{
public int Id { get; set; }
public string ImageUrl { get; set; } = string.Empty;
public string Text { get; set; } = string.Empty;
public int StepNumber { get; set; }
}
}
