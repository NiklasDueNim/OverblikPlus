@using OverblikPlus.Dtos.User
@using OverblikPlus.Services.Interfaces
@inherits LayoutComponentBase
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject CustomAuthStateProvider AuthStateProvider
@inject IUserService UserService

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <!-- Topbar -->
        <div class="d-flex justify-content-between align-items-center px-3 py-2 bg-light shadow-sm">
            
            <div class="dropdown ms-auto">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                    @user.FirstName @user.LastName
                </button>
                <ul class="dropdown-menu dropdown-menu-end shadow-lg" aria-labelledby="dropdownMenuButton">
                    <li>
                        <a class="dropdown-item d-flex align-items-center" href="@($"/user/{user.Id}")">
                            <i class="fas fa-user me-2"></i> Profil
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item d-flex align-items-center" href="/settings">
                            <i class="fas fa-cog me-2"></i> Indstillinger
                        </a>
                    </li>
                    <li>
                        <hr class="dropdown-divider">
                    </li>
                    <li>
                        <a class="dropdown-item d-flex align-items-center text-danger" @onclick="Logout">
                            <i class="fas fa-sign-out-alt me-2"></i> Log ud
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code {


    private ReadUserDto user = new();

    protected override async Task OnInitializedAsync()
    {
        var userId = AuthStateProvider.GetUserIdAsync();
        if (!string.IsNullOrEmpty(userId))
        {
            user = await UserService.GetUserById(userId);
        }
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}
