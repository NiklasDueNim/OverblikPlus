name: DEV - Backend CI/CD

on:
  push:
    branches: [Development]
  pull_request:
    branches: [Development]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev               # <- henter secrets fra Environment "dev"
    strategy:
      matrix:
        service: [user-api, task-api]

    steps:
      # 1) Kode + .NET
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 2) Azure login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure Login Check
        run: az account show -o table

      # 3) Build & Test (uden at røre secrets i filer)
      - name: Restore
        run: |
          find . -name '*.csproj' -print0 | xargs -0 -I {} dotnet restore {}

      - name: Build
        run: |
          find . -name '*.csproj' -print0 | xargs -0 -I {} dotnet build {} -c Release --no-restore

      - name: Test
        run: |
          for csproj in $(find . -name '*.Tests.csproj' ! -name '*OverblikPlus.Frontend.Tests*'); do
            dotnet test "$csproj" --no-restore --verbosity normal
          done

      # 4) Byg & push image til ACR
      - name: Login to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_REGISTRY }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          DOCKERFILE="OverblikPlusBackend/TaskMicroService/Dockerfile"
          if [ "${{ matrix.service }}" = "user-api" ]; then
            DOCKERFILE="OverblikPlusBackend/UserMicroService/Dockerfile"
          fi

          docker build --platform linux/amd64 \
            -t ${{ secrets.ACR_REGISTRY }}/overblikplus-${{ matrix.service }}-dev:latest \
            -f "$DOCKERFILE" \
            --build-arg SHARED_PROJECT_PATH=OverblikPlusBackend/OverblikPlus.Shared \
            OverblikPlusBackend

      - name: Push Docker image
        run: docker push ${{ secrets.ACR_REGISTRY }}/overblikplus-${{ matrix.service }}-dev:latest

      # 5) Peg Web App på image
      - name: Point Web App to image (DEV)
        run: |
          az webapp config container set \
            --name overblikplus-${{ matrix.service }}-dev \
            --resource-group overblikplus-dev-rg \
            --container-image-name ${{ secrets.ACR_REGISTRY }}/overblikplus-${{ matrix.service }}-dev:latest \
            --container-registry-url https://${{ secrets.ACR_REGISTRY }}

      # 6) Connection strings (navne skal matche din kode)
      - name: Apply connection strings (DEV)
        run: |
          APP="overblikplus-${{ matrix.service }}-dev"
          RG="overblikplus-dev-rg"

          # SQL (DBConnectionString)
          az webapp config connection-string set -g "$RG" -n "$APP" \
            --settings DBConnectionString="${{ secrets.DB_CONNECTION_STRING }}" \
            --connection-string-type SQLAzure

          # Blob (BlobStorageConnectionString) - bemærk secret med underscore
          az webapp config connection-string set -g "$RG" -n "$APP" \
            --settings BlobStorageConnectionString="${{ secrets.BLOB_STORAGE_CONNECTION_STRING }}" \
            --connection-string-type Custom

      # 7) App settings (Jwt + BLOB_BASE_URL)
      - name: Apply app settings (DEV)
        run: |
          APP="overblikplus-${{ matrix.service }}-dev"
          RG="overblikplus-dev-rg"

          az webapp config appsettings set -g "$RG" -n "$APP" --settings \
            Jwt__Key="${{ secrets.JWT_KEY }}" \
            Jwt__Issuer="${{ secrets.JWT_ISSUER }}" \
            Jwt__Audience="${{ secrets.JWT_AUDIENCE }}" \
            BLOB_BASE_URL="${{ secrets.BLOB_BASE_URL }}" \
            ASPNETCORE_ENVIRONMENT="Production"

          # Kun for user-api: ENCRYPTION_KEY hvis den findes som secret
          if [ "${{ matrix.service }}" = "user-api" ] && [ -n "${{ secrets.ENCRYPTION_KEY }}" ]; then
            az webapp config appsettings set -g "$RG" -n "$APP" --settings ENCRYPTION_KEY="${{ secrets.ENCRYPTION_KEY }}"
          fi

      # 8) Valgfrit: slå logning til for container + vis nøgler (ikke værdier)
      - name: Enable container logs (once)
        run: |
          az webapp log config -g overblikplus-dev-rg -n overblikplus-${{ matrix.service }}-dev \
            --docker-container-logging filesystem --application-logging true --level information

      - name: Show applied config (safe)
        run: |
          APP="overblikplus-${{ matrix.service }}-dev"
          RG="overblikplus-dev-rg"
          echo "App settings keys:"
          az webapp config appsettings list -g "$RG" -n "$APP" --query "[].name"
          echo "Connection strings (names/types):"
          az webapp config connection-string list -g "$RG" -n "$APP" --query "[].{name:name,type:type}"

      # 9) Genstart Web App
      - name: Restart Web App (DEV)
        run: |
          az webapp restart --name overblikplus-${{ matrix.service }}-dev --resource-group overblikplus-dev-rg
