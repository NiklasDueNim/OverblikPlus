name: DEV - Backend CI/CD

on:
  push:
    branches: [Development]
  pull_request:
    branches: [Development]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    concurrency:
      group: dev-${{ matrix.service }}-${{ github.ref }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        service: [user-api, task-api]

    steps:
      # 0) Repo + .NET
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 1) Azure login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure context (sanity)
        run: |
          az account show -o table
          az group show -n overblikplus-dev-rg -o table
          ACR_NAME="${{ secrets.ACR_REGISTRY }}"; ACR_NAME="${ACR_NAME%%.azurecr.io}"
          az acr show -n "$ACR_NAME" -g overblikplus-dev-rg -o table

      # 1.1) Tjek at nødvendige secrets findes i env: dev
      - name: Sanity check required secrets
        shell: bash
        run: |
          missing=0
          req=(
            "AZURE_CREDENTIALS"
            "ACR_REGISTRY" "ACR_USERNAME" "ACR_PASSWORD"
            "DB_CONNECTION_STRING"
            "JWT_KEY" "JWT_ISSUER" "JWT_AUDIENCE"
          )
          for k in "${req[@]}"; do
            v="${{ secrets.AZURE_CREDENTIALS }}"
            case "$k" in
              ACR_REGISTRY) v="${{ secrets.ACR_REGISTRY }}" ;;
              ACR_USERNAME) v="${{ secrets.ACR_USERNAME }}" ;;
              ACR_PASSWORD) v="${{ secrets.ACR_PASSWORD }}" ;;
              DB_CONNECTION_STRING) v="${{ secrets.DB_CONNECTION_STRING }}" ;;
              JWT_KEY) v="${{ secrets.JWT_KEY }}" ;;
              JWT_ISSUER) v="${{ secrets.JWT_ISSUER }}" ;;
              JWT_AUDIENCE) v="${{ secrets.JWT_AUDIENCE }}" ;;
            esac
            if [ -z "$v" ]; then echo "❌ Missing secret: $k"; missing=1; fi
          done

          if [ "${{ matrix.service }}" = "task-api" ]; then
            if [ -z "${{ secrets.BLOB_STORAGE_CONNECTION_STRING }}" ]; then echo "❌ Missing secret: BLOB_STORAGE_CONNECTION_STRING"; missing=1; fi
            if [ -z "${{ secrets.BLOB_BASE_URL }}" ]; then echo "❌ Missing secret: BLOB_BASE_URL"; missing=1; fi
          fi

          if [ "${{ matrix.service }}" = "user-api" ]; then
            if [ -z "${{ secrets.ENCRYPTION_KEY }}" ]; then echo "❌ Missing secret: ENCRYPTION_KEY"; missing=1; fi
          fi

          if [ $missing -ne 0 ]; then
            echo "One or more required secrets are missing in Environment: dev"
            exit 1
          fi
          echo "✅ All required secrets present."

      # 2) Build & test
      - name: Restore
        run: |
          find . -name '*.csproj' -print0 | xargs -0 -I {} dotnet restore {}

      - name: Build
        run: |
          find . -name '*.csproj' -print0 | xargs -0 -I {} dotnet build {} -c Release --no-restore

      - name: Test
        run: |
          for csproj in $(find . -name '*.Tests.csproj' ! -name '*OverblikPlus.Frontend.Tests*'); do
            echo "Running tests in: $csproj"
            dotnet test "$csproj" --no-restore --verbosity normal
          done

      # 3) Docker build/push (ingen secrets bages ind)
      - name: Login to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_REGISTRY }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          DOCKERFILE="OverblikPlusBackend/TaskMicroService/Dockerfile"
          if [ "${{ matrix.service }}" = "user-api" ]; then
            DOCKERFILE="OverblikPlusBackend/UserMicroService/Dockerfile"
          fi
          IMAGE="${{ secrets.ACR_REGISTRY }}/overblikplus-${{ matrix.service }}-dev:latest"
          echo "Building $IMAGE with $DOCKERFILE"
          docker build --platform linux/amd64 \
            -t "$IMAGE" \
            -f "$DOCKERFILE" \
            --build-arg SHARED_PROJECT_PATH=OverblikPlusBackend/OverblikPlus.Shared \
            OverblikPlusBackend

      - name: Push Docker image to ACR
        run: |
          IMAGE="${{ secrets.ACR_REGISTRY }}/overblikplus-${{ matrix.service }}-dev:latest"
          docker push "$IMAGE"

      - name: Show ACR tags (sanity)
        run: |
          ACR_NAME="${{ secrets.ACR_REGISTRY }}"; ACR_NAME="${ACR_NAME%%.azurecr.io}"
          REPO="overblikplus-${{ matrix.service }}-dev"
          echo "Recent tags for $REPO in $ACR_NAME:"
          az acr repository show-tags -n "$ACR_NAME" --repository "$REPO" --top 10 -o table || true

      # 4) Peg Web App på nyt image + pull-credentials
      - name: Update Azure App Service (container)
        run: |
          APP="overblikplus-${{ matrix.service }}-dev"
          RG="overblikplus-dev-rg"
          IMAGE="${{ secrets.ACR_REGISTRY }}/overblikplus-${{ matrix.service }}-dev:latest"
          az webapp config container set \
            --name "$APP" \
            --resource-group "$RG" \
            --container-image-name "$IMAGE" \
            --docker-registry-server-url "https://${{ secrets.ACR_REGISTRY }}" \
            --docker-registry-server-user "${{ secrets.ACR_USERNAME }}" \
            --docker-registry-server-password "${{ secrets.ACR_PASSWORD }}"

      # 5) Sæt miljø + app settings/connection strings (sikre nøgler)
      - name: Set ASPNETCORE_ENVIRONMENT=Development
        run: |
          az webapp config appsettings set \
            -g overblikplus-dev-rg \
            -n overblikplus-${{ matrix.service }}-dev \
            --settings ASPNETCORE_ENVIRONMENT=Development

      - name: Apply shared app settings (JWT)
        run: |
          az webapp config appsettings set \
            -g overblikplus-dev-rg \
            -n overblikplus-${{ matrix.service }}-dev \
            --settings \
              Jwt__Key='${{ secrets.JWT_KEY }}' \
              Jwt__Issuer='${{ secrets.JWT_ISSUER }}' \
              Jwt__Audience='${{ secrets.JWT_AUDIENCE }}'

      - name: Apply DB connection string
        run: |
          az webapp config connection-string set \
            -g overblikplus-dev-rg \
            -n overblikplus-${{ matrix.service }}-dev \
            --settings DBConnectionString='${{ secrets.DB_CONNECTION_STRING }}' \
            --connection-string-type SQLAzure

      - name: Apply Task API settings
        if: matrix.service == 'task-api'
        run: |
          az webapp config appsettings set \
            -g overblikplus-dev-rg \
            -n overblikplus-task-api-dev \
            --settings BlobStorageBaseUrl='${{ secrets.BLOB_BASE_URL }}'
          az webapp config connection-string set \
            -g overblikplus-dev-rg \
            -n overblikplus-task-api-dev \
            --settings BlobStorageConnectionString='${{ secrets.BLOB_STORAGE_CONNECTION_STRING }}' \
            --connection-string-type Custom

      - name: Apply User API settings (encryption key)
        if: matrix.service == 'user-api'
        run: |
          az webapp config appsettings set \
            -g overblikplus-dev-rg \
            -n overblikplus-user-api-dev \
            --settings EncryptionSettings__EncryptionKey='${{ secrets.ENCRYPTION_KEY }}'

      # (valgfrit) slå container-logging til så du ser stdout fra appen
      - name: Enable container logging (filesystem)
        run: |
          az webapp log config \
            -g overblikplus-dev-rg \
            -n overblikplus-${{ matrix.service }}-dev \
            --docker-container-logging filesystem \
            --level information

      - name: Show applied config (safe)
        run: |
          APP="overblikplus-${{ matrix.service }}-dev"
          RG="overblikplus-dev-rg"
          echo "Container settings:" && az webapp config container show -g "$RG" -n "$APP"
          echo "App settings keys:" && az webapp config appsettings list -g "$RG" -n "$APP" --query "[].name"
          echo "Connection strings (name/type):" && az webapp config connection-string list -g "$RG" -n "$APP" --query "[].{name:name,type:type}"

      # 6) Restart app
      - name: Restart Azure App Service
        run: |
          az webapp restart --name overblikplus-${{ matrix.service }}-dev --resource-group overblikplus-dev-rg
